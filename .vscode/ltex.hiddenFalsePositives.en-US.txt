{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfilter\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qmap\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfold (also termed reduce...) are ... functions that analyze a recursive data structure and through use of a given combining operation, recombine the results of recursively processing its constituent parts, building up a return value.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfold (reduce)\\E$"}
{"rule":"DT_JJ_NO_NOUN","sentence":"^\\QSimilar to Functors, a Filterable is a data structure that you can filter.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q(Un)surprisingly, it's another one of those things that we borrow from math.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAu contraire, mon ami.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QMulticherry / CC BY-SA\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThink about it, itemList might have 2 items at one point of your code and 3 at some other...\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QOn the other hand, twoItemList always has these two items and never changes, so if you are getting a test failed because your function returned 3 items instead of 2, you know what happened.\\E$"}
{"rule":"PROFANITY","sentence":"^\\QAlso, I love shitting on PHP (for no good reason ðŸ˜… ).\\E$"}
{"rule":"PROFANITY","sentence":"^\\QAlso, I love shitting on PHP (for no good reason ðŸ˜…).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QPostach.io\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAnd the cherry on top, its tree-shakeable; so almost any build system like webpack or rollup can remove the functions you don't use from the final JS bundle.\\E$"}
